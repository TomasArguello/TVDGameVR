using System;
using System.Linq;
using System.Collections.Generic;
using UnityEngine;

#pragma warning disable 0649    // Variable declared but never assigned to

namespace Tamu.Tvd
{
    // ============================================================================================
    // ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
    // ============================================================================================
    /**
     *  Encapsulate a value representing the cost of the associated object.
     */
    // ============================================================================================
    // ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
    // ============================================================================================
	public class CostValue : MonoBehaviour
	{
        // Bitmask Identifier =====================================================================
        [Flags]
        public enum CostItem
        {
            None            = 0,
            Spaghetti       = 1 << 0,
            Straw           = 1 << 1,
            Bamboo          = 1 << 2,
            CoffeeStirrer   = 1 << 3,
            Tape            = 1 << 4,
        }
        // ========================================================================================

        // Fields =================================================================================
        [SerializeField] private float _cost;
        public float Cost => _cost;

        [SerializeField] private CostItem _itemType;
        public CostItem ItemType => _itemType;
        // ========================================================================================

        // Mono ===================================================================================
        // ------------------------------------------------------------------------------
		void Start()
		{
            GameObject.FindObjectsOfType<CostListener>().ToList()
                .ForEach(listener => listener.SubscribeToCost(this));
		}
        // ------------------------------------------------------------------------------
        // ========================================================================================
	}
    // ============================================================================================
    // ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
    // ============================================================================================
}